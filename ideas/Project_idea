Porject HW4
# Pokemon Project
Tech used: React+flask?

The version 1(almost ready):
User can sign up and create its own player profile(postgreSQL).
User can fetch pokemon from API and store into postgreSQL. 
User can feed pokemon(Many to Many) and Pokemon can level up as meet the feeding requirements. 
User can put pokemons into box or travel with them. 
User can buy "stone" from store(pokemon item API) and evolve the pokemon (I really really love this feature!!!!)
***New featured idea: shopping cart with stripe and chat with other players***
[click for userflow](https://app.diagrams.net/#HAlanChu61%2Fhb-Ecomm%2Fmain%2FUntitled%20Diagram.drawio)

The version 2:
- Pokemon can evolve as it reach the specific level. (I am still working on it now..) 
There is a evolution chain api, but the strucutre is kind of chanllenging for me! 
For example, some pokemon evolve by leveling up, and some pokemon do based on items, and some based on trade?
and some pokemon like eevee(https://pokeapi.co/api/v2/evolution-chain/67) has multiple different type for evolution....
(ex. https://pokeapi.co/api/v2/evolution-chain/1)
- User need to use pokemon ball to capute pokemon! (The better poekomon ball would provide better capture rate)
- User has a shopping cart (i believe it should implement session learned this week.)
- User can write some notes for pokemon, when player wants to release the Pokemon. It would pops up something touched to convince player keeps Pokemon

The version 3:
- User can battle the Pokemon Gym and collect badge (there are stats API for Pokemon)
(It may not be too hard to calculate the atk or def based on level ...?!)

(Yeah I feel very excited when I work on this project! Still remember the moment that i evolve pikachu to raichu lol) 

--------------
# 1. Pokemon Project
- We can fetch API from pokemon api https://pokeapi.co/
- We can CRUD Pokemon data(photo, level, skills, move ...)
- We can signup/login user, and group pokemon as team( one to many relations)
- As we have pokemons, we can train/feed to level up or evolve (many to many relation)
- We can bring the team to battle with raid? (still thinking how to setup raid?)


# 2. Retail project
- I have a walmart open API https://www.walmart.io/ (I am still playing with it...)
- We can signup/login have own profile and shopping cart. 
- As we signup, we could let user to fill out a form(preference). 
- As user login, we let the homapage show some ads/promotion related to the user's preference
- Add comments (One to many relation)


